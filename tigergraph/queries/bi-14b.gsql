CREATE OR REPLACE DISTRIBUTED QUERY bi14(STRING country1, STRING country2) SYNTAX v2 {
TYPEDEF TUPLE<UINT person1Id, UINT person2Id, STRING city1Name, INT score> pairScore;
  MapAccum<VERTEX<City>, GroupByAccum<UINT person1Id, UINT person2Id, BitwiseOrAccum bits>> @@pairScoreMap;
  MinAccum<VERTEX<City>> @city;
  SetAccum<VERTEX<City>> @@CityNonzeroScore;
  OrAccum @valid, @selected;
  SumAccum<UINT> @pid1, @pid2;
  MinAccum<UINT> @min_pid1, @@min_pid2;
  HeapAccum<pairScore>(1, score DESC, person1Id ASC, person2Id ASC) @@pairScoreGroupTop;
  HeapAccum<pairScore>(1, score DESC, person1Id ASC, person2Id ASC) @@result;
  UINT score;
  
  City1 = SELECT c FROM Country:cn -(<IS_PART_OF)- City:c
    WHERE cn.name == country1;
  P1 = SELECT p FROM City1:c -(<IS_LOCATED_IN)-Person:p 
    ACCUM p.@city = c, p.@selected +=true;
  P2 = 
    SELECT p
    FROM Country:cn -(<IS_PART_OF.<IS_LOCATED_IN)-Person:p
    WHERE cn.name == country2;
  print P1.size(), P1.size(); 
  P1 = SELECT p1 FROM P2:p2 -(KNOWS)- Person:p1
    WHERE p1.@selected
    ACCUM p2.@valid+=True;
  P2 = SELECT p2 FROM P2:p2 WHERE p2.@valid;

  print P1.size(), P2.size();
  // Calculate score
  C1 = SELECT m FROM P1:p -(<HAS_CREATOR)- Comment:m;
  M1 = 
    SELECT m FROM P1:p -(<HAS_CREATOR)- (Comment|Post):m
    ACCUM m.@pid1 = p.id, m.@city = p.@city;
  M2 = 
    SELECT m FROM P2:p -(<HAS_CREATOR)- (Comment|Post):m
    ACCUM m.@pid2 = p.id;
  
  acc1 =
    SELECT m2
    FROM C1:c1 -(REPLY_OF>)- (Comment|Post):m2
    WHERE m2.@pid2>0
    ACCUM @@pairScoreMap += (c1.@city -> (c1.@pid1, m2.@pid2 -> 8)); // 1000
  
  acc2 =
    SELECT c2
    FROM M1:m1 -(<REPLY_OF)- Comment:c2
    WHERE c2.@pid2>0
    ACCUM @@pairScoreMap += (m1.@city -> (m1.@pid1, c2.@pid2 -> 4)); //0100

  acc3 =
    SELECT m2
    FROM P1:p1 -(LIKES>)- (Comment|Post):m2
    WHERE m2.@pid2>0
    ACCUM @@pairScoreMap += (p1.@city -> (p1.id, m2.@pid2 -> 2)); //0010

  acc4 =
    SELECT p2
    FROM M1:m1 -(<LIKES)- Person:p2
    WHERE p2.@valid
    ACCUM @@pairScoreMap += (m1.@city -> (m1.@pid1, p2.id -> 1)); //0001

  @@result.resize(City1.size());
  FOREACH (city,gba) IN @@pairScoreMap DO
    @@CityNonzeroScore += city;
    @@pairScoreGroupTop.clear();
    FOREACH (p1,p2,b) IN gba DO
      score = (b&8)/8 * 4 + (b&4)/4  + (b&2)/2 * 10  + (b&1);  
      @@pairScoreGroupTop += pairScore(p1, p2, city.name, score);
    END;
    @@result += @@pairScoreGroupTop.top();
  END;
  PRINT @@result as result;
}

INSTALL query bi14
run query bi14("China", "Austria")
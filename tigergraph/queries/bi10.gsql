CREATE OR REPLACE DISTRIBUTED QUERY bi10(VERTEX<Person> personId, VERTEX<Country> country, 
    VERTEX<TagClass> tagClass, UINT minPathDistance, UINT maxPathDistance) SYNTAX v2 {

  SumAccum<UINT> @@pathLength;
  OrAccum @visited;

  C0 = {country};
  candidates = SELECT p FROM C0 -(<IS_PART_OF.<IS_LOCATED_IN)- Person:p;

  sources = {personId};
  targets (Person) = {};
  WHILE @@pathLength < minPathDistance DO
    sources =
      SELECT t
      FROM sources:s -(KNOWS)- Person:t
      WHERE NOT t.@visited
      POST-ACCUM s.@visited = TRUE;
    @@pathLength += 1;
  END;
  WHILE @@pathLength < maxPathDistance DO
    sources =
      SELECT t
      FROM sources:s -(KNOWS)- Person:t
      WHERE NOT t.@visited
      POST-ACCUM s.@visited = TRUE;
    @@pathLength += 1;

    targets = targets UNION sources;
  END;

  expertCandidatePersons = targets INTERSECT candidates;
  TC0 = {tagClass};
  messages =
    SELECT m
    FROM expertCandidatePersons:p -(<HAS_CREATOR)- (Comment|Post):m -(HAS_TAG>.HAS_TYPE>)- TC0;

  SELECT
    p.id AS expertCandidatePersonId,
    t.name AS tagName,
    COUNT(m) AS messageCount
  INTO result
  FROM
    messages:m -(HAS_TAG>)- Tag:t,
    :m -(HAS_CREATOR>)- expertCandidatePersons:p
  ORDER BY messageCount DESC, tagName ASC, expertCandidatePersonId ASC
  LIMIT 100;

  PRINT result;
}

//USE GRAPH ldbc_snb
CREATE OR REPLACE DISTRIBUTED QUERY bi15precompute(VERTEX<Person> person1Id, VERTEX<Person> person2Id, DATETIME startDate, DATETIME endDate) SYNTAX v2 {
  SetAccum<VERTEX<Person>> @neighbor;
  MinAccum<VERTEX<Person>> @creator, @replyto;
  MapAccum<VERTEX<Person>, SumAccum<UINT>> @replyCount;
  MapAccum<VERTEX<Person>, SumAccum<DOUBLE>> @weight;
  OrAccum @visited;
  INT startEpoch = datetime_to_epoch(startDate) * 1000;
  INT endEpoch = datetime_to_epoch(endDate) * 1000;

  // Traverse from single-vertex Person is more effiient
  S1 = {person1Id}; S2 = {person2Id};
  S = S1 UNION S2;
  persons = SELECT s FROM S:s ACCUM s.@visited += true;
  WHILE S.size() > 0 DO
    S = SELECT t FROM S:s -(KNOWS)- Person:t
      WHERE NOT t.@visited
      ACCUM t.@visited += true;
    persons = persons UNION S;
  END;
  
  tmp = SELECT p1 FROM persons:p1 -(KNOWS)- Person:p2 WHERE p2.@visited ACCUM p1.@neighbor += p2;
  M = SELECT m FROM persons:p -(<HAS_CREATOR)- _:m ACCUM m.@creator += p;
  // filter messages in the taget forum 
  M = SELECT m FROM M:m -(REPLY_OF>*.<CONTAINER_OF)- Forum:f WHERE f.creationDate BETWEEN startEpoch AND endEpoch;
  M1 = SELECT m1 FROM M:m1 -(<REPLY_OF)- _:m2
    ACCUM m1.@replyCount += (m2.@creator -> 1);

  PersonReplied = SELECT p FROM M1:m -(HAS_CREATOR>)- Person:p    
    ACCUM FOREACH (p2,cnt) IN m.@replyCount DO 
      IF p2 IN p.@neighbor THEN
        IF m.type == "Post" THEN 
          p.@weight += (p2 -> cnt)
        ELSE
          p.@weight += (p2 -> 0.5*cnt)
        END
      END
    END;
  
  tmp =
    SELECT p2
    FROM persons:p1 -(KNOWS:e)- Person:p2
    WHERE p1.id<p2.id
    ACCUM
      INSERT INTO KNOWS15 (FROM, TO, weight) VALUES (p1, p2, 1.0/(1 + p1.@weight.get(p2) + p2.@weight.get(p1)));
}

CREATE OR REPLACE DISTRIBUTED QUERY bi15(VERTEX<Person> person1Id, VERTEX<Person> person2Id) syntax v2 {
  MinAccum<DOUBLE> @@result, @dis;
  OrAccum @next;
  P = {Person.*};
  @@result = P.size();
  S = {person1Id};
  S = SELECT s FROM S:s ACCUM s.@dis = 0; 
  WHILE S.size()>0 DO
    S = SELECT t FROM S:s-(KNOWS15:e)-Person:t 
      ACCUM
        DOUBLE t_dis = s.@dis + e.weight, 
        IF t_dis < @@result AND t_dis < t.@dis THEN
          t.@dis += t_dis,
          t.@next += true, 
          IF t == person2Id THEN
            @@result += t_dis
          END 
        END
      HAVING t.@next;
    S = SELECT s FROM S:s ACCUM s.@next = false;
  END;

  IF ABS(@@result - P.size()) < 1 THEN
    // if no path was found
    PRINT -1 as result;
  ELSE 
    PRINT @@result as result;
  END;
}

CREATE OR REPLACE DISTRIBUTED QUERY bi15cleanup() syntax v2 {
  S = {Person.*};
  DELETE e FROM S:v1 -(KNOWS15:e)- Person:v2;
}

/*
INSTALL QUERY bi15precompute,bi15,bi15cleanup
run query bi15cleanup()
run query bi15precompute(2975,2199023256727,"2010-04-18","2012-11-22")
run query bi15(2975,2199023256727)
*/
## Message
CREATE VERTEX Comment (id UINT PRIMARY KEY, creationDate INT, locationIP STRING, browserUsed STRING, content STRING, length UINT)
CREATE VERTEX Post (id UINT PRIMARY KEY, imageFile STRING, creationDate INT, locationIP STRING, browserUsed STRING, language STRING, content STRING, length UINT)
## organisation
CREATE VERTEX Company (id UINT PRIMARY KEY, name STRING, url STRING)
CREATE VERTEX University (id UINT PRIMARY KEY, name STRING, url STRING)
## place
CREATE VERTEX City (id UINT PRIMARY KEY, name STRING, url STRING)
CREATE VERTEX Country (id UINT PRIMARY KEY, name STRING, url STRING)
CREATE VERTEX Continent (id UINT PRIMARY KEY, name STRING, url STRING)
## etc
CREATE VERTEX Forum (id UINT PRIMARY KEY, title STRING, creationDate INT)
CREATE VERTEX Person (id UINT PRIMARY KEY, firstName STRING, lastName STRING, gender STRING, birthday INT, creationDate INT,
  locationIP STRING, browserUsed STRING, speaks SET<STRING>, email SET<STRING>, popularityScore UINT) // popularityScore is for precompute in BI-6
CREATE VERTEX Tag (id UINT PRIMARY KEY, name STRING, url STRING)
CREATE VERTEX TagClass (id UINT PRIMARY KEY, name STRING, url STRING)


# create edge
CREATE DIRECTED EDGE CONTAINER_OF (FROM Forum, TO Post) WITH REVERSE_EDGE="CONTAINER_OF_REVERSE"
CREATE DIRECTED EDGE HAS_CREATOR (FROM Comment|Post, TO Person) WITH REVERSE_EDGE="HAS_CREATOR_REVERSE"
CREATE DIRECTED EDGE HAS_INTEREST (FROM Person, TO Tag) WITH REVERSE_EDGE="HAS_INTEREST_REVERSE"
CREATE DIRECTED EDGE HAS_MEMBER (FROM Forum, TO Person, creationDate INT) WITH REVERSE_EDGE="HAS_MEMBER_REVERSE"
CREATE DIRECTED EDGE HAS_MODERATOR (FROM Forum, TO Person) WITH REVERSE_EDGE="HAS_MODERATOR_REVERSE"
CREATE DIRECTED EDGE HAS_TAG (FROM Comment|Post|Forum, TO Tag) WITH REVERSE_EDGE="HAS_TAG_REVERSE"
CREATE DIRECTED EDGE HAS_TYPE (FROM Tag, TO TagClass) WITH REVERSE_EDGE="HAS_TYPE_REVERSE"
CREATE DIRECTED EDGE IS_LOCATED_IN (FROM Company, TO Country | FROM Person, TO City | FROM University, TO City) WITH REVERSE_EDGE="IS_LOCATED_IN_REVERSE"
CREATE DIRECTED EDGE MESG_LOCATED_IN (FROM Comment, TO Country | FROM Post, TO Country) // Reverse edge of Comment/Post -IS_Located_IN-> Country will cause Country connected by too many edges, which makes loading slow
CREATE DIRECTED EDGE IS_PART_OF (FROM City, TO Country | FROM Country, TO Continent) WITH REVERSE_EDGE="IS_PART_OF_REVERSE"
CREATE DIRECTED EDGE IS_SUBCLASS_OF (FROM TagClass, TO TagClass) WITH REVERSE_EDGE="IS_SUBCLASS_OF_REVERSE"
CREATE UNDIRECTED EDGE KNOWS (FROM Person, TO Person, creationDate INT)
CREATE DIRECTED EDGE LIKES (FROM Person, TO Comment|Post, creationDate INT) WITH REVERSE_EDGE="LIKES_REVERSE"
CREATE DIRECTED EDGE REPLY_OF (FROM Comment, TO Comment|Post) WITH REVERSE_EDGE="REPLY_OF_REVERSE"
CREATE DIRECTED EDGE STUDY_AT (FROM Person, TO University, classYear INT) WITH REVERSE_EDGE="STUDY_AT_REVERSE"
CREATE DIRECTED EDGE WORK_AT (FROM Person, TO Company, workFrom INT) WITH REVERSE_EDGE="WORK_AT_REVERSE"

CREATE UNDIRECTED EDGE KNOWS15 (FROM Person, TO Person, weight DOUBLE) // weight for BI 15
CREATE UNDIRECTED EDGE KNOWS19 (FROM Person, TO Person, weight DOUBLE) // weight for BI 19
CREATE UNDIRECTED EDGE KNOWS20 (FROM Person, TO Person, weight UINT) // weight for BI 20

CREATE GLOBAL SCHEMA_CHANGE JOB addIndex {
  ALTER VERTEX Country ADD INDEX country_name ON (name);
  ALTER VERTEX Company ADD INDEX company_name ON (name);
  ALTER VERTEX University ADD INDEX university_name ON (name);
  ALTER VERTEX Tag ADD INDEX tag_name ON (name);
  ALTER VERTEX TagClass ADD INDEX tagclass_name ON (name);
}

RUN GLOBAL SCHEMA_CHANGE JOB addIndex
CREATE GRAPH ldbc_snb (*)
